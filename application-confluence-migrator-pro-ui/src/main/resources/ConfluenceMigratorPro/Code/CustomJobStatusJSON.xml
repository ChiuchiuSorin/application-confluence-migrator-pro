<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ConfluenceMigratorPro.Code.CustomJobStatusJSON" locale="">
  <web>ConfluenceMigratorPro.Code</web>
  <name>CustomJobStatusJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#template('job_macros.vm')
##
## Copied and adapted from job_macros.vm and job_status_json.vm
##
#macro (customGetJobStatusJSON $status $json $translationPrefix)
  #set ($log = [])
  ## We only ever return one event
  #set ($logOffset = $status.logTail.size() - 1)
  #set ($requestedLogOffset =  $numbertool.toNumber($request.logOffset).intValue())
  #if ($requestedLogOffset &gt; 0)
    #set ($logOffset = $mathtool.max($logOffset, $requestedLogOffset))
  #end
  #if ($logOffset &gt; $requestedLogOffset + 1)
    ## job.js counts the offset using the number of ".log-item" elements.
    ## This is an horrible hack to make it stop requesting the same log entries when we don't answer all the entries.
    ## We need to insert N-1  fake log items, where N is the number of skipped items,
    ## because the fake items are displayed in one item, which we need to substract.
    #set ($numberOfFakes = ($logOffset - $requestedLogOffset) - 1)
    #set ($fakes = $stringtool.repeat('&lt;i class="log-item"&gt;&lt;/i&gt;', $numberOfFakes))
    #set ($fakeLogItems = "&lt;span class='fake-log-items' style='display:none'&gt;$fakes&lt;/span&gt;")
    #set ($discard = $log.add({
      'level': "info",
      'renderedMessage': "$fakeLogItems"
    }))
  #end
  #foreach ($logEvent in $status.logTail.getLogEvents($logOffset, -1))
    #set ($discard = $log.add({
      'level': $logEvent.level.toString().toLowerCase(),
      'renderedMessage': "#printLog($logEvent)"
    }))
  #end
  #set ($json = $NULL)
  #setVariable("$json" {
    'id': $status.request.id,
    'state': $status.state,
    'progress': {
      'offset': $status.progress.offset
    },
    'log': {
      'offset': $requestedLogOffset,
      'items': $log
    },
    'message' : "#displayJobStatusMessage($status, $NULL, $NULL, $NULL, $translationPrefix)",
    'questionTimeLeft' : $status.getQuestionTimeLeft('NANOSECONDS')
  })
#end
#macro (customOutputJobStatusJSON $jobStatus $translationPrefix)
  #customGetJobStatusJSON($jobStatus, $json, $translationPrefix)
  #set ($json.message = "#displayJobFinishedMessage($jobStatus, $NULL, $NULL, $NULL, $translationPrefix)")
  $response.setContentType('application/json')
  $jsontool.serialize($json)
#end
#set($jobId = $request.getParameterValues('jobId'))
#set($translationPrefix = $request.getParameter('translationPrefix'))
#set($jobStatus = $services.job.getJobStatus($jobId))
#if ($jobStatus)
  #customOutputJobStatusJSON($jobStatus, $translationPrefix)
#else
  $response.setStatus(404)
  &lt;div class="box errormessage"&gt;
    $services.localization.render("${translationPrefix}.notFound")
  &lt;/div&gt;
#end
{{/velocity}}</content>
</xwikidoc>
