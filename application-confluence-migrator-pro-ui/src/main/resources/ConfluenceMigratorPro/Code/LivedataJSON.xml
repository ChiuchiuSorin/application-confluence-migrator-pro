<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ConfluenceMigratorPro.Code.LivedataJSON" locale="">
  <web>ConfluenceMigratorPro.Code</web>
  <name>LivedataJSON</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>Main.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>LivedataJSON</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.LiveTableResultsMacros" /}}

{{velocity wiki="false"}}
#if($xcontext.action == 'get' &amp;&amp; "$!{request.outputSyntax}" == 'plain')
  $response.setContentType('application/json')
  #set($map = {})
  #gridresult_buildJSON("$!request.classname" $request.collist.split(',') $map)
  ## Add the status of the executed/executing job.
  #macro (migrationStatus $icon $message)
    &lt;div class="migrationState"&gt;
      &lt;div class="migrationStateIcon"&gt;$icon&lt;/div&gt;
      &lt;div class="migrationStateText"&gt;$message&lt;/div&gt;
    &lt;/div&gt;
  #end
  #foreach($row in $map.get('rows'))
    #set ($rowDocRef = $services.model.resolveDocument($row.get('doc_fullName')))
    #set ($jobState = $services.confluenceMigration.getLastJob($rowDocRef).status.state)
    #if ("$!row.get('executed_value')" == '')
      #set ($discard = $row.put('executed_value', "0"))
      #set ($discard = $row.put('executed', "-"))
    #end
    #if ($row.get('executed_value') == '0')
      #if ("$!jobState" == '' || $jobState == 'NONE')
        #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('cross'), $services.localization.render('confluencepro.migration.livetable.state.none'))"))
      #elseif ($jobState == 'WAITING')
        #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('warning'), $services.localization.render('confluencepro.migration.livetable.state.waiting'))"))
      #elseif ($jobState == 'RUNNING')
        #set ($icon = "&lt;div class='loading'&gt;&lt;/div&gt;")
        #set ($discard = $row.put('job_status', "#migrationStatus($icon, $services.localization.render('confluencepro.migration.livetable.state.running'))"))
      #else
        #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('check'), $services.localization.render('confluencepro.migration.livetable.state.done'))"))
      #end
    #elseif ($row.get('executed_value') == '1')
      #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('check'), $services.localization.render('confluencepro.migration.livetable.state.done'))"))
    #elseif ($row.get('executed_value') == '2')
      #if ($objecttool.isNull($jobState))
        #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('cross'), $services.localization.render('confluencepro.migration.livetable.state.died'))"))
      #else
        #set ($icon = "&lt;div class='loading'&gt;&lt;/div&gt;")
        #set ($discard = $row.put('job_status', "#migrationStatus($icon, $services.localization.render('confluencepro.migration.livetable.state.running'))"))
      #end
    #elseif ($row.get('executed_value') == '3')
      #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('stop'), $services.localization.render('confluencepro.migration.livetable.state.canceled'))"))
    #elseif ($row.get('executed_value') == '4')
      #set ($discard = $row.put('job_status', "#migrationStatus($services.icon.renderHTML('cross'), $services.localization.render('confluencepro.migration.livetable.state.errored'))"))
    #end
  #end
  $jsontool.serialize($map)
#end
{{/velocity}}</content>
</xwikidoc>
